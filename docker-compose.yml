version: '3.8'

services:
  ipfix-odata-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_DATE: ${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        VCS_REF: ${VCS_REF:-$(git rev-parse --short HEAD)}
        VERSION: ${VERSION:-0.0.1-SNAPSHOT}
    container_name: ipfix-odata-service
    ports:
      - "8888:8888"  # Application port
      - "9999:9999"  # JMX monitoring port
      - "5005:5005"  # Debug port (optional)
    environment:
      # Override default settings for Docker environment
      - SPRING_PROFILES_ACTIVE=docker,production
      - IGNITE_WORK_DIRECTORY=/app/data/ignite-work
      - LUCENE_INDEX_PATH=/app/data/lucene-indices
      - JVM_MAX_HEAP=2g
      - JVM_INITIAL_HEAP=512m
    volumes:
      # Persist data directories
      - ipfix-data:/app/data
      - ipfix-logs:/app/logs
      # Optional: Mount custom configuration
      - ./config/application-docker.properties:/app/config/application-docker.properties:ro
    networks:
      - ipfix-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/odata/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 3g
          cpus: '2.0'
        reservations:
          memory: 1g
          cpus: '0.5'
    # Security context
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp
      - /app/data/ignite-work
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE

  # Optional: Monitoring with Prometheus metrics endpoint
  prometheus:
    image: prom/prometheus:latest
    container_name: ipfix-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - ipfix-network
    profiles:
      - monitoring

  # Optional: Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: ipfix-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - ipfix-network
    profiles:
      - monitoring

volumes:
  ipfix-data:
    driver: local
  ipfix-logs:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  ipfix-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
